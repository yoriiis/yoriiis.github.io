name: Build

on:
  - push
  - pull_request

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v2

      - name: Cache node_modules
        uses: actions/cache@v1
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm # npm cache files are stored in `~/.npm` on Linux/macOS
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - uses: actions/setup-node@v1
        with:
          node-version: 12.14.0

      - name: Install dependencies
        run: npm ci

      - name: Test ESLint
        run: npm run test:eslint

      - name: Test Stylelint
        run: npm run test:stylelint

      - name: Build
        run: npm run build

      - name: Upload web artifacts
        uses: actions/upload-artifact@v1
        if: github.ref == 'refs/heads/develop' &&
            github.repository == 'yoriiis/yoriiis.github.io' &&
            github.event_name != 'pull_request'
        with:
          name: web
          path: web

  deploy-gh-pages:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: build
    if: success() &&
        github.ref == 'refs/heads/develop' &&
        github.repository == 'yoriiis/yoriiis.github.io' &&
        github.event_name != 'pull_request'
    steps:
      - uses: actions/checkout@v2

      - name: Download web artifacts
        uses: actions/download-artifact@v1
        with:
          name: web

      - name: Deploy to Github Pages
        uses: crazy-max/ghaction-github-pages@v1
        with:
          target_branch: master
          build_dir: web
          keep_history: true
          commit_message: "Deploy to GitHub pages"
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
